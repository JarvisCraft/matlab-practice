A = [
    3 20 -2 0;
    5 -4 0 20;
    0 5 32 -3;
    12 0 0 3
]; % 413 ; 441 ; 1058 ; 153
B = [
    41;
    -19;
    34;
    29
];

% Проверяю матрицу на невырожденность
assert(det(A) ~= 0, 'Матрица является вырожденной');

% Решаю СЛАУ матричными средствами MATLAB
fprintf('%s:\n%s\n%s:\n%s\n%s:\n%s\n%s:\n%s\n',...
    'Решение полученное способом #1.1', task_3_1_1(A, B),...
    'Решение полученное способом #1.2', task_3_1_2(A, B),...
    'Решение полученное способом #1.3', task_3_1_3(A, B),...
    'Решение полученное способом #1.4', task_3_1_4(A, B)...
)

% Привожу матрицу к необходимому виду 1 способом
[A1, B1] = task_3_2_1(A, B);
% Привожу матрицу к необходимому виду 2 способом
[A2, B2] = task_3_2_2(A, B, 1e-5);

X1 = task_3_2(A1, B1, 1e-5);
X2 = task_3_2(A2, B2, 1e-5);
% Решаю СЛАУ при помощи собственных реализаций алгоритма
fprintf('%s:\n%s\n%s:\n%s\n',...
    'Решение с иcпользованием матрицы, полученной способом #2.1', X1,...
    'Решение с иcпользованием матрицы, полученной способом #2.2', X2...
    ...
)
fprintf('%s: %s\n%s: %s\n',...
    'Погрешность при решении для матриц 2.1', norm(A * X1 - B),
    'Погрешность при решении для матриц 2.2', norm(A * X2 - B),
)