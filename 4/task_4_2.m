% Нижняя граница интегрования
a = 1;
% Верхняя граница интегрирования
b = pi;

% Исходная функция
f = @(x) cos(x);

% Значение, вычисленное аналитически
I0 = integral(f, a, b);
fprintf('Значение, вычисленное аналитически: %d\n', I0);

% Количество узлов интегрирования
n = 8;

% Метод Симпсона
I = int_simpson(f, a, b, n);
fprintf('Значение, вычисленное методом Симпсона: %d\n', I);

% Вычисление погрешности по правилу Рунге
D = abs(I - int_simpson(f, a, b, 2 * n));
fprintf('Абсолютная погрешность по правилу Рунге: %d\n', D);
fprintf('Относительная погрешность по правилу Рунге: %d\n', abs(D / I0));

% Вычисление точной погрешности
D = abs(I0 - I);
fprintf('Абсолютная погрешность: %d\n', D);
fprintf('Относительная погрешность: %d\n', abs(D / I0));